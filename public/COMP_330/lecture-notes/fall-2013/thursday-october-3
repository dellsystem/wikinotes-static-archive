<head>
    <title>Wikinotes</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.0.0/semantic.min.css" />
    <link rel="stylesheet" href="/static/styles.css" />
    <meta name="viewport" content="width=device-width">
    
<script type="text/javascript"
        src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
    TeX: {
        extensions: ['cancel.js']
    },
    tex2jax: {
        inlineMath: [  ['$', '$'] ],
        processEscapes: true
    }
});
</script>

</head>
<body>
    
    <div id="header" class="ui container">
        <a href="/">
            <img src="/static/img/logo-header.png" class="ui image" />
        </a>
    </div>
    
    <div id="content">
        <div class="ui container">
            
<div class="ui container">
    <div class="ui secondary segment">
        <div class="ui large breadcrumb">
            <a class="section" href="/">Home</a>
            <i class="right chevron icon divider"></i>
            <a class="section" href="/COMP_330/">
                COMP 330
            </a>
            <i class="right chevron icon divider"></i>
            <span class="active section">
                
                Thursday, October 3, 2013
                
            </span>
        </div>
    </div>
    <h1 class="ui header">
        <div class="content">
            
            Thursday, October 3, 2013
            
            <span>
                <a href="http://creativecommons.org/licenses/by-nc/3.0/">
                    <img src="/static/img/cc-by-nc.png" alt="CC-BY-NC"
                         title="Available under a Creative Commons Attribution-NonCommercial 3.0 Unported License" />
                </a>
            </span>
            
            <div class="sub header">
                More pumping lemma stuff
            </div>
            
        </div>
    </h1>
    <div class="ui icon list">
        <div class="item">
            <i class="user icon"></i>
            <div class="content">
                <strong>Maintainer:</strong> admin
            </div>
        </div>
    </div>
    <div class="ui divider"></div>
    <div id="wiki-content">
	
        <p>The rest of the assignments (for assignment 1) were returned. Today: more examples for proving irregularity, unary vs binary languages, understanding an arbitrary DFA.</p>
<div class="toc">
<ul>
<li><a href="#proving-irregularity-continued">1 Proving irregularity, continued</a><ul>
<li><a href="#further-examples">1.1 Further examples</a></li>
</ul>
</li>
<li><a href="#regular-infinite-subsets">2 Regular infinite subsets</a></li>
<li><a href="#unary-and-binary-languages">3 Unary and binary languages</a></li>
<li><a href="#understanding-an-arbitrary-dfa">4 Understanding an arbitrary DFA</a><ul>
<li><a href="#transition-graphs">4.1 Transition graphs</a></li>
</ul>
</li>
</ul>
</div>
<h2 class="header"><i>1</i>Proving irregularity, continued<a class="headerlink" href="#proving-irregularity-continued" name="proving-irregularity-continued">&para;</a></h2>
<p><span>$$L = \{a^n \,\mid\, n \text{ is prime}\}$$</span></p>
<p>This is clearly not regular. We can prove this using the contrapositive of the pumping lemma, as we did last time.</p>
<ul>
<li>A picks <span>$p$</span></li>
<li>You choose <span>$w = a^n$</span> where <span>$n \geq p + 2$</span> is prime</li>
<li>A chooses some <span>$y = a^m$</span> where <span>$1 \leq m \leq p$</span>. Since <span>$w = xyz$</span>, <span>$|xz| = |w| - |y| = n - m$</span>.</li>
<li>Now, <span>$|xy^iz| = |xz| + |y| \cdot i = n - m + im = n - m(i-1)$</span>. If you choose <span>$i = n+1$</span>, then <span>$|xy^iz| = n - m(n-1+1) = n-mn = (m+1)n$</span>, which is not prime if neither <span>$n$</span> nor <span>$m+1$</span> are 1. Since <span>$n \geq p+2$</span>, and <span>$m \geq 1$</span>, then yes, neither factor is 1. Thus <span>$|xy^iz|$</span> is not prime, and so <span>$xy^iz \notin L$</span>. <span>$\blacksquare$</span></li>
</ul>
<h3 class="header"><i>1.1</i>Further examples<a class="headerlink" href="#further-examples" name="further-examples">&para;</a></h3>
<p>Left as an exercise for the diligent reader.</p>
<ul>
<li><span>$L = \{a^n \, \mid \, n \geq 0\}$</span> <sup id="fnref:regular"><a href="#fn:regular" rel="footnote" title="This seems regular to me, as it's just a*. Is ther...">1</a></sup></li>
<li><span>$L = \{a^{n^2} \,\mid\,n\geq 0\}$</span></li>
</ul>
<h2 class="header"><i>2</i>Regular infinite subsets<a class="headerlink" href="#regular-infinite-subsets" name="regular-infinite-subsets">&para;</a></h2>
<p>We know (from last lecture) that <span>$L = \{a^nb^n \, \mid \, n \geq 0\}$</span> is not regular. Does it have any infinite regular subsets?<sup id="fnref:infinite"><a href="#fn:infinite" rel="footnote" title="All finite subsets are regular, so we turn our att...">2</a></sup> No, it does not. One way to prove this is to show that there are infinitely many equivalence classes (recall Myhill-Nerode), of the form <span>$[a^n]$</span> for some <span>$n$</span>. Another way is to use the pumping lemma (the steps are the same as for <span>$\{a^nb^n\,\mid\,n\geq 0\}$</span>).</p>
<p>Consider another language: <span>$\{w\,\mid\,N_a(w) = N_b(w)\}$</span>. We saw last time that this is also not regular. Does <em>this</em> language have any infinite regular subsets? Yes, it does: <span>$(ab)^*$</span> is one prominent example.</p>
<h2 class="header"><i>3</i>Unary and binary languages<a class="headerlink" href="#unary-and-binary-languages" name="unary-and-binary-languages">&para;</a></h2>
<p>Suppose <span>$S \subseteq \mathbb{N}$</span>. We define the unary function as follows:</p>
<p><span>$$\text{unary}(S) = \{w \,\mid\, |w| \in S\}$$</span></p>
<p>where <span>$\text{unary}(S) \subseteq \{a\}^*$</span>. For example, if <span>$S = \{2, 3, 5\}$</span>, then <span>$\text{unary}(S) = \{aa, aaa, aaaaa\}$</span>.</p>
<p>Similarly, we define binary in the usual way. <span>$\text{binary}(S) \subseteq \{0, 1\}^*$</span>, and <span>$\text{binary}(S) = \{10, 11, 101\}$</span>.</p>
<p>Consider the relationship between binary and unary. Here are two statements:</p>
<ul>
<li>(<span>$\alpha$</span>) If <span>$\text{unary}(S)$</span> is regular, then so is <span>$\text{binary}(S)$</span>.</li>
<li>(<span>$\beta$</span>) If <span>$\text{binary}(S)$</span> is regular, then so is <span>$\text{unary}(S)$</span>.</li>
</ul>
<p>One of them is true, the other is false. Since unary is a simpler system than binary, one might expect that (<span>$\alpha$</span>) is true, and <span>$(\beta)$</span> is false. Indeed, this is correct: a counterexample to (<span>$\beta$</span>) is <span>$10^*$</span>, which is obviously regular as it is a regular expression; however, the corresponding unary language, <span>$\{a^{2^n} \,\mid\,n \geq 0\}$</span>, is not regular, as we showed last class.</p>
<p>Let's now prove that (<span>$\alpha$</span>) is true. First, consider the structure of the DFA for any regular language over a 1-letter alphabet. Since there's only one letter in the alphabet, there can only be 1 transition (at most) out of any state. So there's only one possible path to follow, and there is at most one loop-around (possibly none, if the language is finite), and some of the states are accept states.</p>
<p>At this point, we introduce a new term: an <strong>ultimately periodic</strong> set <span>$U \subseteq \mathbb N$</span> is a set defined by 2 positive integers, <span>$p$</span> and <span>$n_0$</span>, such that <span>$\forall n \geq n_0$</span>, if <span>$n \in U$</span>, then <span>$n+p\in U$</span> (so <span>$p$</span> is the period).</p>
<p>The fact that the only possible path loops back around at some point means that the lengths of words in any regular language over a 1-letter alphabet form an ultimately periodic set.<sup id="fnref:loop"><a href="#fn:loop" rel="footnote" title="If there are no loops, then the language is finite...">3</a></sup> Then <span>$\text{binary}(S)$</span> will be the binary encoding of an ultimately periodic set, which can also be thought of as the union of a finite set and a periodic set. It should be clear that we can construct a DFA over a binary alphabet for any such language.</p>
<h2 class="header"><i>4</i>Understanding an arbitrary DFA<a class="headerlink" href="#understanding-an-arbitrary-dfa" name="understanding-an-arbitrary-dfa">&para;</a></h2>
<p>Suppose you're given an arbitrary DFA <span>$M$</span> with <span>$n$</span> states. We can prove the following:</p>
<blockquote>
<p>The set of words accepted by <span>$M$</span> is non-empty <span>$\iff$</span> <span>$M$</span> accepts a word of length <span>$\leq n$</span>.</p>
</blockquote>
<p>(Proof omitted)</p>
<blockquote>
<p>The set of words accepted by <span>$M$</span> is infinite <span>$\iff$</span> <span>$M$</span> acccepts a word of length <span>$l$</span>, where <span>$n &lt; l &lt; 2n$</span>.</p>
</blockquote>
<p>(Proof left as an exercise)</p>
<p>So if we wish to determine what <span>$M$</span> accepts (treating it as a black box), we could just try every word up to length <span>$n$</span>. If no such words are accepted, then we know that <span>$M$</span> doesn't accept anything - it recognises the empty language.</p>
<h3 class="header"><i>4.1</i>Transition graphs<a class="headerlink" href="#transition-graphs" name="transition-graphs">&para;</a></h3>
<p>Given the transition graph for a DFA, we can check if the machine accepts:</p>
<ul>
<li>The empty language: Check reachability (BFS/DFS). If no accept states are reachable, then it accepts the empty language.</li>
<li>An infinite language: Test for cycles, reachability, and accept states.</li>
<li>Everything: Check if all reachable states are accept states.</li>
</ul>
<div class="footnote">
<div class="ui divider"></div>
<ol>
<li id="fn:regular">
<p>This seems regular to me, as it's just a*. Is there a typo?&#160;<a href="#fnref:regular" rev="footnote" title="Jump back to footnote 1 in the text">&#8617;</a></p>
</li>
<li id="fn:infinite">
<p>All finite subsets are regular, so we turn our attention to the infinite subsets.&#160;<a href="#fnref:infinite" rev="footnote" title="Jump back to footnote 2 in the text">&#8617;</a></p>
</li>
<li id="fn:loop">
<p>If there are no loops, then the language is finite, and so the statement is still true, it's just that <span>$n_0$</span> can be some number <span>$\geq$</span> the length of the longest word, so that the periodic part is empty.&#160;<a href="#fnref:loop" rev="footnote" title="Jump back to footnote 3 in the text">&#8617;</a></p>
</li>
</ol>
</div>
	
    </div>
</div>

        </div>
    </div>
    <div id="footer" class="ui container">
        <div class="ui stackable grid">
            <div class="twelve wide column">
                <p>
                    Built by <a href="https://twitter.com/dellsystem">
                    @dellsystem</a>. Content is student-generated. <a
                    href="https://github.com/dellsystem/wikinotes">See the old codebase on GitHub</a>
                </p>
            </div>
            <div class="four wide right aligned column">
                <p><a href="#header">Back to top</a></p>
            </div>
        </div>
    </div>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-28456804-1', 'auto');
  ga('send', 'pageview');

</script>
</body>
</html>
