<head>
    <title>Wikinotes</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.0.0/semantic.min.css" />
    <link rel="stylesheet" href="/static/styles.css" />
    <meta name="viewport" content="width=device-width">
    
<script type="text/javascript"
        src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>
<script type="text/x-mathjax-config">
MathJax.Hub.Config({
    TeX: {
        extensions: ['cancel.js']
    },
    tex2jax: {
        inlineMath: [  ['$', '$'] ],
        processEscapes: true
    }
});
</script>

</head>
<body>
    
    <div id="header" class="ui container">
        <a href="/">
            <img src="/static/img/logo-header.png" class="ui image" />
        </a>
    </div>
    
    <div id="content">
        <div class="ui container">
            
<div class="ui container">
    <div class="ui secondary segment">
        <div class="ui large breadcrumb">
            <a class="section" href="/">Home</a>
            <i class="right chevron icon divider"></i>
            <a class="section" href="/COMP_206/">
                COMP 206
            </a>
            <i class="right chevron icon divider"></i>
            <span class="active section">
                
                Sample Midterm Answer
                
            </span>
        </div>
    </div>
    <h1 class="ui header">
        <div class="content">
            
            Sample Midterm Answer
            
            <span>
                <a href="http://creativecommons.org/licenses/by-nc/3.0/">
                    <img src="/static/img/cc-by-nc.png" alt="CC-BY-NC"
                         title="Available under a Creative Commons Attribution-NonCommercial 3.0 Unported License" />
                </a>
            </span>
            
        </div>
    </h1>
    <div class="ui icon list">
        <div class="item">
            <i class="user icon"></i>
            <div class="content">
                <strong>Maintainer:</strong> admin
            </div>
        </div>
    </div>
    <div class="ui divider"></div>
    <div id="wiki-content">
	
        <div class="toc">
<ul>
<li><a href="#question-1">1 Question 1</a></li>
<li><a href="#question-2">2 Question 2</a><ul>
<li><a href="#part-1">2.1 Part 1</a></li>
<li><a href="#part-2">2.2 Part 2</a></li>
<li><a href="#part-3">2.3 Part 3</a></li>
<li><a href="#4">2.4 4</a></li>
</ul>
</li>
<li><a href="#question-3">3 Question 3</a><ul>
<li><a href="#part-1_1">3.1 Part 1</a></li>
<li><a href="#part-2_1">3.2 Part 2</a></li>
</ul>
</li>
<li><a href="#question-4">4 Question 4</a></li>
</ul>
</div>
<h2 class="header"><i>1</i>Question 1<a class="headerlink" href="#question-1" name="question-1">&para;</a></h2>
<ul>
<li>A unix session is the period after user authentication and before the user logs out in which the user is allowed to create processes and kill them inside the same session. It is essentially a group of process.</li>
<li>A shell is an environment which allows the user to interact with the system. It is used to allow the user to run processes and use system resources. It is invoked upon the creation of a session.</li>
<li>The internet is an array of layers which work together to help a message (packet/datagram) reach its desired destination as best as possible. For data to transmit over the internet, it would have to use a specific application which sends packets to a server. The packet would have to follow a specific protocol like TCP or UDP. The packets would then be sent to a specific address like an IPv4 address. At the server, it would need to listen for that packet at a specific port and read it depending on the type it is. The hardware involved includes a router which receives the data sent from your computer's network card, the router then passes the data to the modem, which sends the data to your ISP, which ultimately sends out the data to its next destination. TL;DR: it is a series of tubes.</li>
</ul>
<h2 class="header"><i>2</i>Question 2<a class="headerlink" href="#question-2" name="question-2">&para;</a></h2>
<h3 class="header"><i>2.1</i>Part 1<a class="headerlink" href="#part-1" name="part-1">&para;</a></h3>
<ul>
<li>Create x and instantiate it with the value of 10, create y and instantiate it with the value of 2, create z.</li>
<li>Increment the value of x, then return the incremented value of x, then subtract the value of y and multiply everything by 2, then assign the value to z. Then decrement the value of y.</li>
</ul>
<h3 class="header"><i>2.2</i>Part 2<a class="headerlink" href="#part-2" name="part-2">&para;</a></h3>
<ul>
<li>Create x and instantiate it with the value of 5, create y and instantiate it with the value of 2.</li>
<li>Evaluate x * 2, and shift it 2 bits to the right(divide by 4 then flooring the result). If the value is non-zero, print "Yes\n".</li>
</ul>
<h3 class="header"><i>2.3</i>Part 3<a class="headerlink" href="#part-3" name="part-3">&para;</a></h3>
<ul>
<li>Create p and assign it the memory address of a double on the stack. Create x which is a double.</li>
<li>Assign x the double value located at memory address of a place which is 3 bytes ahead of p.</li>
</ul>
<h3 class="header"><i>2.4</i>4<a class="headerlink" href="#4" name="4">&para;</a></h3>
<ul>
<li>Create s and assign it the memory address of the character 'm' and the subsequent characters are next it in memory on the stack.</li>
<li>Create the variables a,b,c,d,e and assign each the memory address of 10 bytes on the stack.</li>
<li>Call <code>sscanf</code> on the arguments, which will give a the value of "my", b the value of "name", c the value of "is" and d the value of "Bob", then <code>sscanf</code> will return the value 4. Calling <code>printf</code> with the arguments "%s\n" and 4 will tell it to print the string starting at 0x00000004 (which will probably segfault because the process is not allowed to access data located at that memory address).</li>
</ul>
<h2 class="header"><i>3</i>Question 3<a class="headerlink" href="#question-3" name="question-3">&para;</a></h2>
<h3 class="header"><i>3.1</i>Part 1<a class="headerlink" href="#part-1_1" name="part-1_1">&para;</a></h3>
<table class="codehilitetable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36</pre></div></td><td class="code"><div class="codehilite"><pre><span class="c">#!/bin/bash</span>

<span class="k">function </span>factorial  <span class="o">{</span>
    <span class="nv">N</span><span class="o">=</span><span class="nv">$1</span>
    <span class="nv">A</span><span class="o">=</span><span class="nv">$1</span>
    <span class="k">while</span> <span class="o">[</span> <span class="nv">$N</span> -gt 0 <span class="o">]</span>
    <span class="k">do</span>
<span class="k">        </span><span class="nv">A</span><span class="o">=</span><span class="sb">`</span>expr <span class="nv">$A</span> <span class="s1">&#39;*&#39;</span> <span class="nv">$N</span><span class="sb">`</span>
        <span class="nv">N</span><span class="o">=</span><span class="sb">`</span>expr <span class="nv">$N</span> - 1<span class="sb">`</span>
    <span class="k">done</span>
<span class="k">    </span><span class="nb">echo</span> <span class="nv">$A</span>
<span class="o">}</span>

<span class="k">function </span>usage <span class="o">()</span>
<span class="o">{</span>
        <span class="nb">echo</span> <span class="s2">&quot;Usage:&quot;</span>
        <span class="nb">echo</span> <span class="s2">&quot;        myprog.sh [--help|--version] n&quot;</span>
        <span class="nb">echo</span> <span class="s2">&quot;Where n is the number for factorial&quot;</span>
<span class="o">}</span>

<span class="k">case</span> <span class="nv">$1</span> in
       --help|-h<span class="o">)</span>
               usage
       ;;
       --version|-v<span class="o">)</span>
               <span class="nb">echo</span> <span class="s2">&quot;myprog.sh version 0.0.2&quot;</span>
              <span class="nb">exit </span>0
       ;;
       -<span class="o">)</span>
               <span class="nb">echo</span> <span class="s2">&quot;Error: no such option $1&quot;</span>
               usage
               <span class="nb">exit </span>1
       ;;
<span class="k">esac</span>

factorial <span class="nv">$1</span>
</pre></div>
</td></tr></table>

<h3 class="header"><i>3.2</i>Part 2<a class="headerlink" href="#part-2_1" name="part-2_1">&para;</a></h3>
<p>Given a list of files, it will copy the first file with the name of FIRSTFILENAME.BAK-(i<sup>th</sup> File's name), if the file exists already it will not<br />
copy it.</p>
<h2 class="header"><i>4</i>Question 4<a class="headerlink" href="#question-4" name="question-4">&para;</a></h2>
<table class="codehilitetable"><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54</pre></div></td><td class="code"><div class="codehilite"><pre><span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;stdlib.h&gt;</span>

<span class="kt">int</span> <span class="n">a</span><span class="p">[</span><span class="mi">10</span><span class="p">][</span><span class="mi">10</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">b</span><span class="p">[</span><span class="mi">10</span><span class="p">][</span><span class="mi">10</span><span class="p">];</span>

<span class="kt">void</span> <span class="nf">FillMatrix</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">,</span> <span class="kt">int</span> <span class="n">m</span><span class="p">[</span><span class="mi">10</span><span class="p">][</span><span class="mi">10</span><span class="p">]);</span>
<span class="kt">void</span> <span class="nf">MultMatrix</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">[</span><span class="mi">10</span><span class="p">][</span><span class="mi">10</span><span class="p">],</span> <span class="kt">int</span> <span class="n">b</span><span class="p">[</span><span class="mi">10</span><span class="p">][</span><span class="mi">10</span><span class="p">],</span> <span class="kt">int</span> <span class="n">c</span><span class="p">[</span><span class="mi">10</span><span class="p">][</span><span class="mi">10</span><span class="p">]);</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Please enter the dimensions of the first array in the format of &#39;NxM&#39;:&quot;</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">ax</span><span class="p">,</span><span class="n">ay</span><span class="p">,</span><span class="n">bx</span><span class="p">,</span><span class="n">by</span><span class="p">;</span>
    <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%dx%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">ax</span><span class="p">,</span><span class="o">&amp;</span><span class="n">ay</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Please enter the dimensions of the second array in the format of &#39;NxM&#39;:&quot;</span><span class="p">);</span>
    <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%dx%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">bx</span><span class="p">,</span><span class="o">&amp;</span><span class="n">by</span><span class="p">);</span>
    <span class="k">if</span><span class="p">(</span><span class="n">ax</span><span class="o">!=</span><span class="n">by</span> <span class="o">||</span> <span class="n">ax</span> <span class="o">&gt;</span> <span class="mi">10</span> <span class="o">||</span> <span class="n">ay</span> <span class="o">&gt;</span> <span class="mi">10</span> <span class="o">||</span> <span class="n">bx</span> <span class="o">&gt;</span> <span class="mi">10</span> <span class="o">||</span> <span class="n">by</span> <span class="o">&gt;</span><span class="mi">10</span><span class="p">){</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Invalid size&quot;</span><span class="p">);</span>
        <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Please fill in the first matrix</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
    <span class="n">FillMatrix</span><span class="p">(</span><span class="n">ax</span><span class="p">,</span><span class="n">ay</span><span class="p">,</span><span class="n">a</span><span class="p">);</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Please fill in the second matrix</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
    <span class="n">FillMatrix</span><span class="p">(</span><span class="n">bx</span><span class="p">,</span><span class="n">by</span><span class="p">,</span><span class="n">b</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">c</span><span class="p">[</span><span class="mi">10</span><span class="p">][</span><span class="mi">10</span><span class="p">];</span>
    <span class="n">MultMatrix</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">ay</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">bx</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;%d</span><span class="se">\t</span><span class="s">&quot;</span><span class="p">,</span><span class="n">c</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">]);</span>
        <span class="p">}</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="nf">MultMatrix</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">[</span><span class="mi">10</span><span class="p">][</span><span class="mi">10</span><span class="p">],</span> <span class="kt">int</span> <span class="n">b</span><span class="p">[</span><span class="mi">10</span><span class="p">][</span><span class="mi">10</span><span class="p">],</span><span class="kt">int</span> <span class="n">c</span><span class="p">[</span><span class="mi">10</span><span class="p">][</span><span class="mi">10</span><span class="p">]){</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="mi">10</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="mi">10</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
            <span class="kt">int</span> <span class="n">entrySum</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
            <span class="kt">int</span> <span class="n">k</span><span class="p">;</span>
            <span class="k">for</span><span class="p">(</span><span class="n">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">k</span><span class="o">&lt;</span><span class="mi">10</span><span class="p">;</span><span class="n">k</span><span class="o">++</span><span class="p">){</span>
                <span class="n">entrySum</span> <span class="o">+=</span> <span class="n">a</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">i</span><span class="p">]</span> <span class="o">*</span> <span class="n">b</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="p">];</span>
            <span class="p">}</span>
            <span class="n">c</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">entrySum</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="nf">FillMatrix</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">,</span> <span class="kt">int</span> <span class="n">m</span><span class="p">[</span><span class="mi">10</span><span class="p">][</span><span class="mi">10</span><span class="p">]){</span>
    <span class="kt">int</span> <span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">y</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
        <span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">x</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
            <span class="n">printf</span><span class="p">(</span><span class="s">&quot;Enter the entry at (%d,%d):&quot;</span><span class="p">,</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">);</span>
            <span class="n">scanf</span><span class="p">(</span><span class="s">&quot;%d&quot;</span><span class="p">,</span><span class="o">&amp;</span><span class="n">m</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">]);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</td></tr></table>
	
    </div>
</div>

        </div>
    </div>
    <div id="footer" class="ui container">
        <div class="ui stackable grid">
            <div class="twelve wide column">
                <p>
                    Built by <a href="https://twitter.com/dellsystem">
                    @dellsystem</a>. Content is student-generated. <a
                    href="https://github.com/dellsystem/wikinotes">See the old codebase on GitHub</a>
                </p>
            </div>
            <div class="four wide right aligned column">
                <p><a href="#header">Back to top</a></p>
            </div>
        </div>
    </div>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-28456804-1', 'auto');
  ga('send', 'pageview');

</script>
</body>
</html>
